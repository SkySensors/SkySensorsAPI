services:
  postgresdb:
    restart: unless-stopped
    image: ghcr.io/skysensors/skygres:latest
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 3
  sky-sensors-api:
    container_name: sky-sensors-api
    image: sky-sensors-api:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASS=${DB_PASS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:5000/healthcheck"
        ]
      interval: 1s
      timeout: 1s
      retries: 30
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    user: 1001:1001
    ports:
      - "8080:8080"
    depends_on:
      - postgresdb
  sky-sensors-api.tests:
    container_name: sky-sensors-api.tests
    image: sky-sensors-api.tests:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    command: 'dotnet test SkySensorsAPI.sln -c Release --no-restore --no-build'
    depends_on:
      - sky-sensors-api
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
